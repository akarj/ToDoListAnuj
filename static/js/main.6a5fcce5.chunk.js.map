{"version":3,"sources":["Components/Upper-section/upper-section.jsx","Components/Lower-section/To-do-tags.jsx","App.js","reportWebVitals.js","index.js"],"names":["Upper","state","inputTextInInputBox","currentIndex","onSubmition","text","preventDefault","props","addToListItems","setState","changeHandler","target","value","className","method","type","this","onChange","placeholder","onClick","Component","Tags","Item","isCompleted","htmlFor","Index","name","id","markCompleted","App","ListItems","concat","index","newList","map","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6a5fcce5.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"./upper-section.css\";\r\n\r\nclass Upper extends Component {\r\n  state = {\r\n    inputTextInInputBox: \"\",\r\n    currentIndex: 1,\r\n\r\n    onSubmition: (text) => {\r\n      text.preventDefault();\r\n      if (this.state.inputTextInInputBox === \"\") {\r\n        return;\r\n      }\r\n      this.props.addToListItems(this.state.inputTextInInputBox);\r\n\r\n      this.setState({\r\n        inputTextInInputBox: \"\",\r\n        currentIndex: this.state.currentIndex + 1,\r\n      });\r\n    },\r\n    changeHandler: (text) => {\r\n      this.setState({\r\n        inputTextInInputBox: text.target.value,\r\n      });\r\n    },\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"SearchBar\">\r\n        <form method=\"post\">\r\n          <input\r\n            type=\"text\"\r\n            className=\"text SeachPanel\"\r\n            value={this.state.inputTextInInputBox}\r\n            onChange={this.state.changeHandler}\r\n            placeholder=\"Add A task...\"\r\n          />\r\n          <button className=\"SearchBarButton\" onClick={this.state.onSubmition}>\r\n            Add A Task\r\n          </button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Upper;\r\n","import React, { Component } from \"react\";\r\nimport \"./To-do-tags.css\";\r\nclass Tags extends Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        {!this.props.Item.isCompleted ? (\r\n          <div className=\"To-Do-Tag\">\r\n            <label className=\"checkbox\">\r\n              <span className=\"checkbox__input\">\r\n                <input\r\n                  type=\"checkbox\"\r\n                  className=\"checked\"\r\n                  name={this.props.Item.Index}\r\n                  id={this.props.Item.Index}\r\n                  onChange={() =>\r\n                    this.props.markCompleted(this.props.Item.Index)\r\n                  }\r\n                />\r\n                <span className=\"checkbox__control\"></span>\r\n              </span>\r\n\r\n              <label htmlFor={this.props.Item.Index}>\r\n                {this.props.Item.text}\r\n              </label>\r\n            </label>\r\n          </div>\r\n        ) : (\r\n          <div className=\"To-Do-Tag Completed\">\r\n            {\"     \"}\r\n            <span> </span>\r\n            <label htmlFor={this.props.Item.Index}>\r\n              {this.props.Item.text}\r\n            </label>\r\n            <br />\r\n          </div>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Tags;\r\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Upper from \"./Components/Upper-section/upper-section\";\nimport Tags from \"./Components/Lower-section/To-do-tags\";\nclass App extends Component {\n  state = {\n    ListItems: [\n      {\n        Index: 1,\n        text: \"Build React To-Do List App\",\n        isCompleted: false,\n      },\n      {\n        Index: 2,\n        text: \"Completed the To-Do List Work\",\n        isCompleted: true,\n      },\n    ],\n\n    currentIndex: 3,\n\n    addToListItems: (text) => {\n      let ListItems = this.state.ListItems;\n\n      this.setState({\n        ListItems: [\n          ...ListItems.concat({\n            Index: this.state.currentIndex,\n            text: text,\n            isCompleted: false,\n          }),\n        ],\n        currentIndex: this.state.currentIndex + 1,\n      });\n    },\n\n    markCompleted: (index) => {\n      let newList = [...this.state.ListItems];\n\n      newList[index - 1].isCompleted = true;\n\n      this.setState({\n        ListItems: newList,\n      });\n    },\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"Upper\">\n          <Upper key=\"Upper\" addToListItems={this.state.addToListItems} />\n        </div>\n        <div className=\"Main\">\n          <div className=\"Lists\">\n            <div className=\"Lower\">\n              <div className=\"Lower-Lower Left\">\n                <h1> Task To Complete</h1>\n                <div className=\"scrollable\">\n                  <article>\n                    {this.state.ListItems.map((Item) =>\n                      !Item.isCompleted ? (\n                        <Tags\n                          key={Item.Index}\n                          Item={Item}\n                          markCompleted={this.state.markCompleted}\n                        />\n                      ) : null\n                    )}\n                  </article>\n                </div>\n              </div>\n              <div className=\"Lower-Lower Right\">\n                <h1>Completed Task</h1>\n                <div className=\"scrollable\">\n                  <article>\n                    {this.state.ListItems.map((Item) =>\n                      Item.isCompleted ? (\n                        <Tags\n                          key={Item.Index}\n                          Item={Item}\n                          markCompleted={this.state.markCompleted}\n                        />\n                      ) : null\n                    )}\n                  </article>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}